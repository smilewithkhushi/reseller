product-provenance-dapp/
├── README.md
├── package.json
├── next.config.js
├── tailwind.config.js
├── postcss.config.js
├── tsconfig.json
├── .env.local
├── .env.example
├── .gitignore
├── .eslintrc.json
│
├── app/                                 # Next.js 14 App Router
│   ├── layout.tsx                      # Root layout with providers
│   ├── page.tsx                        # Homepage with main dashboard
│   ├── globals.css                     # Global styles and Tailwind
│   └── favicon.ico
│
├── components/                          # React components
│   ├── ui/                             # shadcn/ui base components
│   │   ├── button.tsx
│   │   ├── card.tsx
│   │   ├── input.tsx
│   │   ├── label.tsx
│   │   ├── textarea.tsx
│   │   ├── alert.tsx
│   │   ├── tabs.tsx
│   │   ├── toast.tsx
│   │   ├── toaster.tsx
│   │   └── use-toast.tsx
│   │
│   ├── ConnectButton.tsx               # Custom wallet connect button
│   ├── RegisterProduct.tsx             # Product registration form
│   ├── CreateInvoice.tsx               # Invoice creation component
│   ├── TransferCertificate.tsx         # Transfer management
│   └── ProductAuditTrail.tsx           # Audit trail viewer
│
├── config/                             # Configuration files
│   ├── wagmi.ts                        # Wagmi and RainbowKit config
│   └── contract.ts                     # Contract ABI and address
│
├── lib/                                # Utility functions
│   ├── utils.ts                        # General utilities (cn function)
│   ├── lighthouse.ts                   # Lighthouse storage helpers
│   └── pdf-generator.ts                # PDF generation utilities
│
├── hooks/                              # Custom React hooks
│   ├── useContract.ts                  # Contract interaction hooks
│   ├── useStorage.ts                   # Storage management hooks
│   └── useProductData.ts               # Product data management
│
├── types/                              # TypeScript type definitions
│   ├── index.ts                        # Main type exports
│   ├── contract.ts                     # Contract-related types
│   └── storage.ts                      # Storage-related types
│
├── contracts/                          # Smart contracts
│   ├── ProductRegistry.sol             # Main product registry contract
│   ├── interfaces/                     # Contract interfaces
│   │   ├── IProductRegistry.sol
│   │   └── IStorageProvider.sol
│   └── libraries/                      # Reusable contract libraries
│       └── Utils.sol
│
├── scripts/                            # Deployment and utility scripts
│   ├── deploy.js                       # Contract deployment script
│   ├── verify.js                       # Contract verification script
│   ├── setup-env.js                    # Environment setup helper
│   └── migrate.js                      # Data migration scripts
│
├── test/                               # Test files
│   ├── contracts/                      # Smart contract tests
│   │   ├── ProductRegistry.test.js
│   │   ├── InvoiceManager.test.js
│   │   └── TransferCertificate.test.js
│   │
│   ├── components/                     # Component tests
│   │   ├── RegisterProduct.test.tsx
│   │   ├── CreateInvoice.test.tsx
│   │   └── ProductAuditTrail.test.tsx
│   │
│   └── utils/                          # Utility function tests
│       ├── lighthouse.test.ts
│       └── pdf-generator.test.ts
│
├── docs/                               # Documentation
│   ├── api/                            # API documentation
│   │   ├── contract-api.md
│   │   └── frontend-api.md
│   │
│   ├── guides/                         # User guides
│   │   ├── getting-started.md
│   │   ├── deployment.md
│   │   └── usage.md
│   │
│   └── architecture/                   # Architecture docs
│       ├── system-design.md
│       ├── smart-contracts.md
│       └── frontend-architecture.md
│
├── public/                             # Static assets
│   ├── images/                         # Image assets
│   │   ├── logo.svg
│   │   ├── hero-bg.jpg
│   │   └── icons/
│   │       ├── product.svg
│   │       ├── invoice.svg
│   │       └── transfer.svg
│   │
│   └── docs/                           # Public documentation
│       ├── whitepaper.pdf
│       └── user-manual.pdf
│
├── styles/                             # Additional styles (if needed)
│   ├── components.css                  # Component-specific styles
│   └── animations.css                  # Custom animations
│
├── utils/                              # Shared utility functions
│   ├── constants.ts                    # App constants
│   ├── formatters.ts                   # Data formatting utilities
│   ├── validators.ts                   # Input validation functions
│   └── helpers.ts                      # General helper functions
│
├── hardhat.config.js                   # Hardhat configuration
├── artifacts/                          # Compiled contract artifacts (auto-generated)
├── cache/                              # Hardhat cache (auto-generated)
├── typechain-types/                    # TypeChain generated types (auto-generated)
│
├── .next/                              # Next.js build output (auto-generated)
├── node_modules/                       # Dependencies (auto-generated)
│
└── deployment/                         # Deployment configurations
    ├── mainnet/                        # Mainnet deployment configs
    │   ├── polygon.json
    │   └── base.json
    │
    ├── testnet/                        # Testnet deployment configs
    │   ├── mumbai.json
    │   └── base-sepolia.json
    │
    └── local/                          # Local development configs
        └── hardhat.json

# Additional files that should be created:

├── .env.example                        # Environment variables template
├── .gitignore                         # Git ignore patterns
├── .eslintrc.json                     # ESLint configuration
├── .prettierrc                        # Prettier configuration
├── jest.config.js                     # Jest testing configuration
├── postcss.config.js                  # PostCSS configuration
└── commitlint.config.js               # Commit message linting